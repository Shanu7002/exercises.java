Java Exercises - Variables, Data Types, Operators, Control Structures, Functions, Data Structures, I/O, Strings, OOP

=====================
1) Variables, Data Types, and Operators
=====================
1. Create a program that declares an integer variable, assigns a value, and displays it.
2. Declare variables to store your name, age, and height, and display them.
3. Convert a value in meters to centimeters.
4. Calculate the area of a rectangle using base and height variables.
5. Write a program that takes two numbers and displays the sum, subtraction, multiplication, and division.
6. Calculate the remainder of the division between two numbers.
7. Use increment and decrement operators and observe the result.
8. Check if a number is even or odd.
9. Convert an integer to a double and vice versa.
10. Calculate a person's BMI.

=====================
2) Control Structures: if, for, while
=====================
11. Check if a number is positive, negative, or zero.
12. Ask for a number and say if it is a multiple of 5.
13. Print numbers from 1 to 10 using for.
14. Print even numbers from 1 to 50 using while.
15. Create a multiplication table for a number provided by the user.
16. Check if a person can vote based on their age.
17. Calculate the sum of numbers from 1 to N using for.
18. Count how many numbers between 1 and 100 are divisible by 3.
19. Print the Fibonacci sequence up to the 10th term.
20. Create an interactive menu using switch-case.

=====================
3) Functions / Methods / Modularization
=====================
21. Create a method that takes two numbers and returns the sum.
22. Write a method that calculates the factorial of a number.
23. Create a method that checks if a number is prime.
24. Create a method that takes a name and returns "Hello, [name]!".
25. Write a method that calculates the average of three numbers.
26. Create a method to reverse a string.
27. Create a method that counts vowels in a string.
28. Implement a method to convert Celsius to Fahrenheit.
29. Create a method that calculates the power of a number.
30. Implement a method to check if a word is a palindrome.

=====================
4) Data Structures: Lists, Maps, Sets
=====================
31. Create a list of numbers and display all elements.
32. Add elements to a list and then remove one.
33. Find the largest number in a list.
34. Create a list of names and sort it alphabetically.
35. Count how many times a number appears in a list.
36. Create a set and add duplicate elements. What happens?
37. Check if an element exists in a set.
38. Create a map to store names and ages.
39. Iterate over the keys of a map and display the values.
40. Remove a specific key from a map.

=====================
5) Input and Output
=====================
41. Ask the user for their name and age and display them.
42. Read two numbers and display the average.
43. Ask the user for a number and say if it is even or odd.
44. Read a word and display it backwards.
45. Ask for 5 numbers from the user and calculate the sum.
46. Read two numbers and display the largest.
47. Create a program that reads a decimal number and converts it to an integer.
48. Ask the user to enter their name and display how many letters it has.
49. Read a text and count how many words there are.
50. Ask the user to enter a sentence and display it in uppercase.

=====================
6) String Manipulation
=====================
51. Count how many vowels there are in a string.
52. Check if two strings are equal.
53. Replace all vowels in a string with '*'.
54. Extract a substring from a word.
55. Concatenate two strings.
56. Convert a string to lowercase and uppercase.
57. Check if a string starts with a certain letter.
58. Check if a string ends with a certain letter.
59. Count how many times a letter appears in a string.
60. Reverse the words in a sentence.

=====================
7) OOP Concepts
=====================
61. Create a Person class with name and age attributes.
62. Add a present() method to the Person class.
63. Create a BankAccount class with deposit and withdraw methods.
64. Create a Rectangle class with a method to calculate the area.
65. Create a Circle class with methods to calculate the area and perimeter.
66. Create a Student class with name and grade attributes, and a method approved().
67. Create a Product class with price and discount.
68. Implement encapsulation in the Product class.
69. Create a Car class with accelerate() and brake() methods.
70. Create a Book class with title and author attributes, and a displayInfo() method.

=====================
8) OOP - Inheritance, Polymorphism, and Others
=====================
71. Create an Animal class and Dog and Cat classes that inherit from it.
72. Add a makeSound() method and override it in each animal class.
73. Create an interface Shape with a calculateArea() method.
74. Implement the Shape interface in Rectangle and Circle classes.
75. Create an abstract Employee class with a calculateSalary() method.
76. Extend Employee in Manager and Salesperson classes.
77. Create a Vehicle class and extend it with Car and Motorcycle.
78. Create an abstract Account class and extend it with CheckingAccount and SavingsAccount.
79. Create a class hierarchy to represent geometric shapes.
80. Demonstrate polymorphism with a list of Shape objects.

=====================
9) Mixed Exercises and Challenges
=====================
81. Read 10 numbers and store them in a list. Display the largest and smallest.
82. Create a program to manage student grades.
83. Read several ages and calculate the average.
84. Create a simple contact list with names and phone numbers using a Map.
85. Implement a simple calculator with functions.
86. Simulate a bank account with deposits and withdrawals.
87. Generate random numbers and store them in a set.
88. Create a program that counts how many words exist in a text.
89. Simulate a service queue using a list.
90. Simulate a simple login system with username and password.

=====================
10) Final Projects
=====================
91. Contact list with classes and a list of objects.
92. Product registration system with prices and discounts.
93. Library with books, authors, and loans.
94. ATM simulation.
95. Student registration with average calculation.
96. Simple number guessing game.
97. Temperature and currency converter.
98. Task management system (to-do list).
99. Parking lot simulation with cars entering and leaving.
100. Banking system with accounts, deposits, withdrawals, and transfers.
